/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SshKey : SSH keys are public keys you provide to the cloud system. They can be injected into Servers at creation time. We highly recommend that you use keys instead of passwords to manage your Servers.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SshKey {
    /// ID of the Resource
    #[serde(rename = "id")]
    pub id: i32,
    /// Name of the Resource. Must be unique per Project.
    #[serde(rename = "name")]
    pub name: String,
    /// Fingerprint of public key
    #[serde(rename = "fingerprint")]
    pub fingerprint: String,
    /// Public key
    #[serde(rename = "public_key")]
    pub public_key: String,
    /// User-defined labels (key-value pairs)
    #[serde(rename = "labels")]
    pub labels: ::std::collections::HashMap<String, String>,
    /// Point in time when the Resource was created (in ISO-8601 format)
    #[serde(rename = "created")]
    pub created: String,
}

impl SshKey {
    /// SSH keys are public keys you provide to the cloud system. They can be injected into Servers at creation time. We highly recommend that you use keys instead of passwords to manage your Servers.
    pub fn new(id: i32, name: String, fingerprint: String, public_key: String, labels: ::std::collections::HashMap<String, String>, created: String) -> SshKey {
        SshKey {
            id,
            name,
            fingerprint,
            public_key,
            labels,
            created,
        }
    }
}


