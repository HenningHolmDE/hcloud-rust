/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: f5b40d8-dirty
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreatePlacementgroupRequest : Request for POST https://api.hetzner.cloud/v1/placement_groups
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreatePlacementgroupRequest {
    /// User-defined labels (`key/value` pairs) for the Resource. For more information, see \"[Labels](#labels)\".  | User-defined labels (`key/value` pairs) for the Resource.  Note that the set of [Labels](#labels) provided in the request will overwrite the existing one.  For more information, see \"[Labels](#labels)\".
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<std::collections::HashMap<String, String>>,
    /// Name of the Placement Group.
    #[serde(rename = "name")]
    pub name: String,
    /// Define the Placement Group Type.
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl CreatePlacementgroupRequest {
    /// Request for POST https://api.hetzner.cloud/v1/placement_groups
    pub fn new(name: String, r#type: Type) -> CreatePlacementgroupRequest {
        CreatePlacementgroupRequest {
            labels: None,
            name,
            r#type,
        }
    }
}
/// Define the Placement Group Type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "spread")]
    Spread,
}

impl Default for Type {
    fn default() -> Type {
        Self::Spread
    }
}
