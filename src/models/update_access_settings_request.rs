/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: in-sync
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UpdateAccessSettingsRequest : Request for POST https://api.hetzner.com/v1/storage_boxes/{id}/subaccounts/{subaccount_id}/actions/update_access_settings
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateAccessSettingsRequest {
    /// Home directory of the Subaccount. Will be created if it doesn't exist yet.
    #[serde(
        rename = "home_directory",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub home_directory: Option<Option<String>>,
    /// Whether the Subaccount should be accessible from outside the Hetzner network.
    #[serde(
        rename = "reachable_externally",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub reachable_externally: Option<Option<bool>>,
    /// Whether the Subaccount should be read-only.
    #[serde(
        rename = "readonly",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub readonly: Option<Option<bool>>,
    /// Whether the Samba subsystem should be enabled.
    #[serde(
        rename = "samba_enabled",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub samba_enabled: Option<Option<bool>>,
    /// Whether the SSH subsystem should be enabled.
    #[serde(
        rename = "ssh_enabled",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub ssh_enabled: Option<Option<bool>>,
    /// Whether the WebDAV subsystem should be enabled.
    #[serde(
        rename = "webdav_enabled",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub webdav_enabled: Option<Option<bool>>,
}

impl UpdateAccessSettingsRequest {
    /// Request for POST https://api.hetzner.com/v1/storage_boxes/{id}/subaccounts/{subaccount_id}/actions/update_access_settings
    pub fn new() -> UpdateAccessSettingsRequest {
        UpdateAccessSettingsRequest {
            home_directory: None,
            reachable_externally: None,
            readonly: None,
            samba_enabled: None,
            ssh_enabled: None,
            webdav_enabled: None,
        }
    }
}
