/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// UpdateServiceRequest : Request for POST https://api.hetzner.cloud/v1/load_balancers/{id}/actions/update_service



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateServiceRequest {
    /// The listen port of the service you want to update.
    #[serde(rename = "listen_port")]
    pub listen_port: i32,
    /// Protocol of the service
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<Protocol>,
    /// The port traffic is forwarded to, i.e. the port the targets are listening and accepting connections on. For HTTP or HTTPS services, the default values are 80 or 443, respectively.
    #[serde(rename = "destination_port", skip_serializing_if = "Option::is_none")]
    pub destination_port: Option<i32>,
    /// Enable the PROXY protocol. Please note that the software running on the targets and handling connections needs to support the PROXY protocol.
    #[serde(rename = "proxyprotocol", skip_serializing_if = "Option::is_none")]
    pub proxyprotocol: Option<bool>,
    #[serde(rename = "http", skip_serializing_if = "Option::is_none")]
    pub http: Option<crate::models::Http>,
    #[serde(rename = "health_check", skip_serializing_if = "Option::is_none")]
    pub health_check: Option<crate::models::HealthCheck>,
}

impl UpdateServiceRequest {
    /// Request for POST https://api.hetzner.cloud/v1/load_balancers/{id}/actions/update_service
    pub fn new(listen_port: i32) -> UpdateServiceRequest {
        UpdateServiceRequest {
            listen_port,
            protocol: None,
            destination_port: None,
            proxyprotocol: None,
            http: None,
            health_check: None,
        }
    }
}

/// Protocol of the service
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Protocol {
    #[serde(rename = "http")]
    Http,
    #[serde(rename = "https")]
    Https,
    #[serde(rename = "tcp")]
    Tcp,
}

