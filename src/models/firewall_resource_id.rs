/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FirewallResourceId : Resource a Firewall should be applied to.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FirewallResourceId {
    /// Type of resource referenced
    #[serde(rename = "type")]
    pub _type: Type,
    #[serde(rename = "server", skip_serializing_if = "Option::is_none")]
    pub server: Option<Box<crate::models::ResourceId>>,
    #[serde(rename = "label_selector", skip_serializing_if = "Option::is_none")]
    pub label_selector: Option<Box<crate::models::LabelSelector>>,
    #[serde(rename = "applied_to_resources", skip_serializing_if = "Option::is_none")]
    pub applied_to_resources: Option<Vec<crate::models::FirewallResourceIdAppliedToResources>>,
}

impl FirewallResourceId {
    /// Resource a Firewall should be applied to.
    pub fn new(_type: Type) -> FirewallResourceId {
        FirewallResourceId {
            _type,
            server: None,
            label_selector: None,
            applied_to_resources: None,
        }
    }
}

/// Type of resource referenced
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "label_selector")]
    LabelSelector,
    #[serde(rename = "server")]
    Server,
}

